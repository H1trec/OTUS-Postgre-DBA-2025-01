-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=192.168.56.1;sid=FREE;port=1521

SET client_encoding TO 'UTF8';

\set ON_ERROR_STOP ON

CREATE SCHEMA IF NOT EXISTS sh;
ALTER SCHEMA sh OWNER TO sh;

SET search_path = sh,public;


CREATE TABLE channels (
	channel_id bigint NOT NULL,
	channel_desc varchar(20) NOT NULL,
	channel_class varchar(20) NOT NULL,
	channel_class_id bigint NOT NULL,
	channel_total varchar(13) NOT NULL,
	channel_total_id bigint NOT NULL
) ;
COMMENT ON TABLE channels IS E'small dimension table';
COMMENT ON COLUMN channels.channel_class IS E'e.g. direct, indirect';
COMMENT ON COLUMN channels.channel_desc IS E'e.g. telesales, internet, catalog';
COMMENT ON COLUMN channels.channel_id IS E'primary key column';
ALTER TABLE channels ADD PRIMARY KEY (channel_id);
ALTER TABLE channels ALTER COLUMN channel_id SET NOT NULL;
ALTER TABLE channels ALTER COLUMN channel_desc SET NOT NULL;
ALTER TABLE channels ALTER COLUMN channel_class SET NOT NULL;
ALTER TABLE channels ALTER COLUMN channel_class_id SET NOT NULL;
ALTER TABLE channels ALTER COLUMN channel_total SET NOT NULL;
ALTER TABLE channels ALTER COLUMN channel_total_id SET NOT NULL;


CREATE TABLE costs (
	prod_id bigint NOT NULL,
	time_id timestamp(0) NOT NULL,
	promo_id bigint NOT NULL,
	channel_id bigint NOT NULL,
	unit_cost double precision NOT NULL,
	unit_price double precision NOT NULL
) PARTITION BY RANGE (time_id) ;
CREATE INDEX costs_prod_bix ON costs (prod_id);
CREATE INDEX costs_time_bix ON costs (time_id);
ALTER TABLE costs ALTER COLUMN prod_id SET NOT NULL;
ALTER TABLE costs ALTER COLUMN time_id SET NOT NULL;
ALTER TABLE costs ALTER COLUMN promo_id SET NOT NULL;
ALTER TABLE costs ALTER COLUMN channel_id SET NOT NULL;
ALTER TABLE costs ALTER COLUMN unit_cost SET NOT NULL;
ALTER TABLE costs ALTER COLUMN unit_price SET NOT NULL;


CREATE TABLE countries (
	country_id bigint NOT NULL,
	country_iso_code char(2) NOT NULL,
	country_name varchar(40) NOT NULL,
	country_subregion varchar(30) NOT NULL,
	country_subregion_id bigint NOT NULL,
	country_region varchar(20) NOT NULL,
	country_region_id bigint NOT NULL,
	country_total varchar(11) NOT NULL,
	country_total_id bigint NOT NULL
) ;
COMMENT ON TABLE countries IS E'country dimension table (snowflake)';
COMMENT ON COLUMN countries.country_id IS E'primary key';
COMMENT ON COLUMN countries.country_name IS E'country name';
COMMENT ON COLUMN countries.country_region IS E'e.g. Europe, Asia';
COMMENT ON COLUMN countries.country_subregion IS E'e.g. Western Europe, to allow hierarchies';
ALTER TABLE countries ADD PRIMARY KEY (country_id);
ALTER TABLE countries ALTER COLUMN country_id SET NOT NULL;
ALTER TABLE countries ALTER COLUMN country_iso_code SET NOT NULL;
ALTER TABLE countries ALTER COLUMN country_name SET NOT NULL;
ALTER TABLE countries ALTER COLUMN country_subregion SET NOT NULL;
ALTER TABLE countries ALTER COLUMN country_subregion_id SET NOT NULL;
ALTER TABLE countries ALTER COLUMN country_region SET NOT NULL;
ALTER TABLE countries ALTER COLUMN country_region_id SET NOT NULL;
ALTER TABLE countries ALTER COLUMN country_total SET NOT NULL;
ALTER TABLE countries ALTER COLUMN country_total_id SET NOT NULL;


CREATE TABLE customers (
	cust_id bigint NOT NULL,
	cust_first_name varchar(20) NOT NULL,
	cust_last_name varchar(40) NOT NULL,
	cust_gender char(1) NOT NULL,
	cust_year_of_birth smallint NOT NULL,
	cust_marital_status varchar(20),
	cust_street_address varchar(40) NOT NULL,
	cust_postal_code varchar(10) NOT NULL,
	cust_city varchar(30) NOT NULL,
	cust_city_id bigint NOT NULL,
	cust_state_province varchar(40) NOT NULL,
	cust_state_province_id bigint NOT NULL,
	country_id bigint NOT NULL,
	cust_main_phone_number varchar(25) NOT NULL,
	cust_income_level varchar(30),
	cust_credit_limit bigint,
	cust_email varchar(50),
	cust_total varchar(14) NOT NULL,
	cust_total_id bigint NOT NULL,
	cust_src_id bigint,
	cust_eff_from timestamp(0),
	cust_eff_to timestamp(0),
	cust_valid varchar(1)
) ;
COMMENT ON TABLE customers IS E'dimension table';
COMMENT ON COLUMN customers.country_id IS E'foreign key to the countries table (snowflake)';
COMMENT ON COLUMN customers.cust_city IS E'city where the customer lives';
COMMENT ON COLUMN customers.cust_credit_limit IS E'customer credit limit';
COMMENT ON COLUMN customers.cust_email IS E'customer email id';
COMMENT ON COLUMN customers.cust_first_name IS E'first name of the customer';
COMMENT ON COLUMN customers.cust_gender IS E'gender; low cardinality attribute';
COMMENT ON COLUMN customers.cust_id IS E'primary key';
COMMENT ON COLUMN customers.cust_income_level IS E'customer income level';
COMMENT ON COLUMN customers.cust_last_name IS E'last name of the customer';
COMMENT ON COLUMN customers.cust_main_phone_number IS E'customer main phone number';
COMMENT ON COLUMN customers.cust_marital_status IS E'customer marital status; low cardinality attribute';
COMMENT ON COLUMN customers.cust_postal_code IS E'postal code of the customer';
COMMENT ON COLUMN customers.cust_state_province IS E'customer geography: state or province';
COMMENT ON COLUMN customers.cust_street_address IS E'customer street address';
COMMENT ON COLUMN customers.cust_year_of_birth IS E'customer year of birth';
CREATE INDEX customers_gender_bix ON customers (cust_gender);
CREATE INDEX customers_marital_bix ON customers (cust_marital_status);
CREATE INDEX customers_yob_bix ON customers (cust_year_of_birth);
ALTER TABLE customers ADD PRIMARY KEY (cust_id);
ALTER TABLE customers ALTER COLUMN cust_id SET NOT NULL;
ALTER TABLE customers ALTER COLUMN cust_first_name SET NOT NULL;
ALTER TABLE customers ALTER COLUMN cust_last_name SET NOT NULL;
ALTER TABLE customers ALTER COLUMN cust_gender SET NOT NULL;
ALTER TABLE customers ALTER COLUMN cust_year_of_birth SET NOT NULL;
ALTER TABLE customers ALTER COLUMN cust_street_address SET NOT NULL;
ALTER TABLE customers ALTER COLUMN cust_postal_code SET NOT NULL;
ALTER TABLE customers ALTER COLUMN cust_city SET NOT NULL;
ALTER TABLE customers ALTER COLUMN cust_city_id SET NOT NULL;
ALTER TABLE customers ALTER COLUMN cust_state_province SET NOT NULL;
ALTER TABLE customers ALTER COLUMN cust_state_province_id SET NOT NULL;
ALTER TABLE customers ALTER COLUMN country_id SET NOT NULL;
ALTER TABLE customers ALTER COLUMN cust_main_phone_number SET NOT NULL;
ALTER TABLE customers ALTER COLUMN cust_total SET NOT NULL;
ALTER TABLE customers ALTER COLUMN cust_total_id SET NOT NULL;


CREATE TABLE products (
	prod_id integer NOT NULL,
	prod_name varchar(50) NOT NULL,
	prod_desc varchar(4000) NOT NULL,
	prod_subcategory varchar(50) NOT NULL,
	prod_subcategory_id bigint NOT NULL,
	prod_subcategory_desc varchar(2000) NOT NULL,
	prod_category varchar(50) NOT NULL,
	prod_category_id bigint NOT NULL,
	prod_category_desc varchar(2000) NOT NULL,
	prod_weight_class smallint NOT NULL,
	prod_unit_of_measure varchar(20),
	prod_pack_size varchar(30) NOT NULL,
	supplier_id integer NOT NULL,
	prod_status varchar(20) NOT NULL,
	prod_list_price double precision NOT NULL,
	prod_min_price double precision NOT NULL,
	prod_total varchar(13) NOT NULL,
	prod_total_id bigint NOT NULL,
	prod_src_id bigint,
	prod_eff_from timestamp(0),
	prod_eff_to timestamp(0),
	prod_valid varchar(1)
) ;
COMMENT ON TABLE products IS E'dimension table';
COMMENT ON COLUMN products.prod_category IS E'product category';
COMMENT ON COLUMN products.prod_category_desc IS E'product category description';
COMMENT ON COLUMN products.prod_desc IS E'product description';
COMMENT ON COLUMN products.prod_id IS E'primary key';
COMMENT ON COLUMN products.prod_list_price IS E'product list price';
COMMENT ON COLUMN products.prod_min_price IS E'product minimum price';
COMMENT ON COLUMN products.prod_name IS E'product name';
COMMENT ON COLUMN products.prod_pack_size IS E'product package size';
COMMENT ON COLUMN products.prod_status IS E'product status';
COMMENT ON COLUMN products.prod_subcategory IS E'product subcategory';
COMMENT ON COLUMN products.prod_subcategory_desc IS E'product subcategory description';
COMMENT ON COLUMN products.prod_unit_of_measure IS E'product unit of measure';
COMMENT ON COLUMN products.prod_weight_class IS E'product weight class';
COMMENT ON COLUMN products.supplier_id IS E'this column';
CREATE INDEX products_prod_cat_ix ON products (prod_category);
CREATE INDEX products_prod_status_bix ON products (prod_status);
CREATE INDEX products_prod_subcat_ix ON products (prod_subcategory);
ALTER TABLE products ADD PRIMARY KEY (prod_id);
ALTER TABLE products ALTER COLUMN prod_id SET NOT NULL;
ALTER TABLE products ALTER COLUMN prod_name SET NOT NULL;
ALTER TABLE products ALTER COLUMN prod_desc SET NOT NULL;
ALTER TABLE products ALTER COLUMN prod_subcategory SET NOT NULL;
ALTER TABLE products ALTER COLUMN prod_subcategory_id SET NOT NULL;
ALTER TABLE products ALTER COLUMN prod_subcategory_desc SET NOT NULL;
ALTER TABLE products ALTER COLUMN prod_category SET NOT NULL;
ALTER TABLE products ALTER COLUMN prod_category_id SET NOT NULL;
ALTER TABLE products ALTER COLUMN prod_category_desc SET NOT NULL;
ALTER TABLE products ALTER COLUMN prod_weight_class SET NOT NULL;
ALTER TABLE products ALTER COLUMN prod_pack_size SET NOT NULL;
ALTER TABLE products ALTER COLUMN supplier_id SET NOT NULL;
ALTER TABLE products ALTER COLUMN prod_status SET NOT NULL;
ALTER TABLE products ALTER COLUMN prod_list_price SET NOT NULL;
ALTER TABLE products ALTER COLUMN prod_min_price SET NOT NULL;
ALTER TABLE products ALTER COLUMN prod_total SET NOT NULL;
ALTER TABLE products ALTER COLUMN prod_total_id SET NOT NULL;


CREATE TABLE promotions (
	promo_id integer NOT NULL,
	promo_name varchar(30) NOT NULL,
	promo_subcategory varchar(30) NOT NULL,
	promo_subcategory_id bigint NOT NULL,
	promo_category varchar(30) NOT NULL,
	promo_category_id bigint NOT NULL,
	promo_cost double precision NOT NULL,
	promo_begin_date timestamp(0) NOT NULL,
	promo_end_date timestamp(0) NOT NULL,
	promo_total varchar(15) NOT NULL,
	promo_total_id bigint NOT NULL
) ;
COMMENT ON TABLE promotions IS E'dimension table without a PK-FK relationship with the facts table, to show outer join functionality';
COMMENT ON COLUMN promotions.promo_begin_date IS E'promotion begin day';
COMMENT ON COLUMN promotions.promo_category IS E'promotion category';
COMMENT ON COLUMN promotions.promo_cost IS E'promotion cost, to do promotion effect calculations';
COMMENT ON COLUMN promotions.promo_end_date IS E'promotion end day';
COMMENT ON COLUMN promotions.promo_id IS E'primary key column';
COMMENT ON COLUMN promotions.promo_name IS E'promotion description';
COMMENT ON COLUMN promotions.promo_subcategory IS E'enables to investigate promotion hierarchies';
ALTER TABLE promotions ADD PRIMARY KEY (promo_id);
ALTER TABLE promotions ALTER COLUMN promo_id SET NOT NULL;
ALTER TABLE promotions ALTER COLUMN promo_name SET NOT NULL;
ALTER TABLE promotions ALTER COLUMN promo_subcategory SET NOT NULL;
ALTER TABLE promotions ALTER COLUMN promo_subcategory_id SET NOT NULL;
ALTER TABLE promotions ALTER COLUMN promo_category SET NOT NULL;
ALTER TABLE promotions ALTER COLUMN promo_category_id SET NOT NULL;
ALTER TABLE promotions ALTER COLUMN promo_cost SET NOT NULL;
ALTER TABLE promotions ALTER COLUMN promo_begin_date SET NOT NULL;
ALTER TABLE promotions ALTER COLUMN promo_end_date SET NOT NULL;
ALTER TABLE promotions ALTER COLUMN promo_total SET NOT NULL;
ALTER TABLE promotions ALTER COLUMN promo_total_id SET NOT NULL;


CREATE TABLE sales (
	prod_id integer NOT NULL,
	cust_id bigint NOT NULL,
	time_id timestamp(0) NOT NULL,
	channel_id smallint NOT NULL,
	promo_id integer NOT NULL,
	quantity_sold smallint NOT NULL,
	amount_sold double precision NOT NULL
) PARTITION BY RANGE (time_id) ;
COMMENT ON TABLE sales IS E'facts table, without a primary key; all rows are uniquely identified by the combination of all foreign keys';
COMMENT ON COLUMN sales.amount_sold IS E'invoiced amount to the customer';
COMMENT ON COLUMN sales.channel_id IS E'FK to the channels dimension table';
COMMENT ON COLUMN sales.cust_id IS E'FK to the customers dimension table';
COMMENT ON COLUMN sales.prod_id IS E'FK to the products dimension table';
COMMENT ON COLUMN sales.promo_id IS E'promotion identifier, without FK constraint (intentionally) to show outer join optimization';
COMMENT ON COLUMN sales.quantity_sold IS E'product quantity sold with the transaction';
COMMENT ON COLUMN sales.time_id IS E'FK to the times dimension table';
CREATE INDEX sales_channel_bix ON sales (channel_id);
CREATE INDEX sales_cust_bix ON sales (cust_id);
CREATE INDEX sales_prod_bix ON sales (prod_id);
CREATE INDEX sales_promo_bix ON sales (promo_id);
CREATE INDEX sales_time_bix ON sales (time_id);
ALTER TABLE sales ALTER COLUMN prod_id SET NOT NULL;
ALTER TABLE sales ALTER COLUMN cust_id SET NOT NULL;
ALTER TABLE sales ALTER COLUMN time_id SET NOT NULL;
ALTER TABLE sales ALTER COLUMN channel_id SET NOT NULL;
ALTER TABLE sales ALTER COLUMN promo_id SET NOT NULL;
ALTER TABLE sales ALTER COLUMN quantity_sold SET NOT NULL;
ALTER TABLE sales ALTER COLUMN amount_sold SET NOT NULL;


CREATE TABLE supplementary_demographics (
	cust_id bigint NOT NULL,
	education varchar(21),
	occupation varchar(21),
	household_size varchar(21),
	yrs_residence bigint,
	affinity_card bigint,
	cricket bigint,
	baseball bigint,
	tennis bigint,
	soccer bigint,
	golf bigint,
	unknown bigint,
	misc bigint,
	comments varchar(4000)
) ;
CREATE INDEX sup_text_idx ON supplementary_demographics USING gin(to_tsvector('english', comments));

ALTER TABLE supplementary_demographics ADD PRIMARY KEY (cust_id);
ALTER TABLE supplementary_demographics ALTER COLUMN cust_id SET NOT NULL;


CREATE TABLE times (
	time_id timestamp(0) NOT NULL,
	day_name varchar(9) NOT NULL,
	day_number_in_week smallint NOT NULL,
	day_number_in_month smallint NOT NULL,
	calendar_week_number smallint NOT NULL,
	fiscal_week_number smallint NOT NULL,
	week_ending_day timestamp(0) NOT NULL,
	week_ending_day_id bigint NOT NULL,
	calendar_month_number smallint NOT NULL,
	fiscal_month_number smallint NOT NULL,
	calendar_month_desc varchar(8) NOT NULL,
	calendar_month_id bigint NOT NULL,
	fiscal_month_desc varchar(8) NOT NULL,
	fiscal_month_id bigint NOT NULL,
	days_in_cal_month bigint NOT NULL,
	days_in_fis_month bigint NOT NULL,
	end_of_cal_month timestamp(0) NOT NULL,
	end_of_fis_month timestamp(0) NOT NULL,
	calendar_month_name varchar(9) NOT NULL,
	fiscal_month_name varchar(9) NOT NULL,
	calendar_quarter_desc char(7) NOT NULL,
	calendar_quarter_id bigint NOT NULL,
	fiscal_quarter_desc char(7) NOT NULL,
	fiscal_quarter_id bigint NOT NULL,
	days_in_cal_quarter bigint NOT NULL,
	days_in_fis_quarter bigint NOT NULL,
	end_of_cal_quarter timestamp(0) NOT NULL,
	end_of_fis_quarter timestamp(0) NOT NULL,
	calendar_quarter_number smallint NOT NULL,
	fiscal_quarter_number smallint NOT NULL,
	calendar_year smallint NOT NULL,
	calendar_year_id bigint NOT NULL,
	fiscal_year smallint NOT NULL,
	fiscal_year_id bigint NOT NULL,
	days_in_cal_year bigint NOT NULL,
	days_in_fis_year bigint NOT NULL,
	end_of_cal_year timestamp(0) NOT NULL,
	end_of_fis_year timestamp(0) NOT NULL
) ;
COMMENT ON TABLE times IS E'Time dimension table to support multiple hierarchies and materialized views';
COMMENT ON COLUMN times.calendar_month_desc IS E'e.g. 1998-01, CORRECT ORDER';
COMMENT ON COLUMN times.calendar_month_name IS E'January to December, repeating';
COMMENT ON COLUMN times.calendar_month_number IS E'1 to 12, repeating';
COMMENT ON COLUMN times.calendar_quarter_desc IS E'e.g. 1998-Q1, CORRECT ORDER';
COMMENT ON COLUMN times.calendar_quarter_number IS E'1 to 4, repeating';
COMMENT ON COLUMN times.calendar_week_number IS E'1 to 53, repeating';
COMMENT ON COLUMN times.calendar_year IS E'e.g. 1999, CORRECT ORDER';
COMMENT ON COLUMN times.day_name IS E'Monday to Sunday, repeating';
COMMENT ON COLUMN times.day_number_in_month IS E'1 to 31, repeating';
COMMENT ON COLUMN times.day_number_in_week IS E'1 to 7, repeating';
COMMENT ON COLUMN times.days_in_cal_month IS E'e.g. 28,31, repeating';
COMMENT ON COLUMN times.days_in_cal_quarter IS E'e.g. 88,90, repeating';
COMMENT ON COLUMN times.days_in_cal_year IS E'365,366 repeating';
COMMENT ON COLUMN times.days_in_fis_month IS E'e.g. 25,32, repeating';
COMMENT ON COLUMN times.days_in_fis_quarter IS E'e.g. 88,90, repeating';
COMMENT ON COLUMN times.days_in_fis_year IS E'e.g. 355,364, repeating';
COMMENT ON COLUMN times.end_of_cal_month IS E'last day of calendar month';
COMMENT ON COLUMN times.end_of_cal_quarter IS E'last day of calendar quarter';
COMMENT ON COLUMN times.end_of_cal_year IS E'last day of cal year';
COMMENT ON COLUMN times.end_of_fis_month IS E'last day of fiscal month';
COMMENT ON COLUMN times.end_of_fis_quarter IS E'last day of fiscal quarter';
COMMENT ON COLUMN times.end_of_fis_year IS E'last day of fiscal year';
COMMENT ON COLUMN times.fiscal_month_desc IS E'e.g. 1998-01, CORRECT ORDER';
COMMENT ON COLUMN times.fiscal_month_name IS E'January to December, repeating';
COMMENT ON COLUMN times.fiscal_month_number IS E'1 to 12, repeating';
COMMENT ON COLUMN times.fiscal_quarter_desc IS E'e.g. 1999-Q3, CORRECT ORDER';
COMMENT ON COLUMN times.fiscal_quarter_number IS E'1 to 4, repeating';
COMMENT ON COLUMN times.fiscal_week_number IS E'1 to 53, repeating';
COMMENT ON COLUMN times.fiscal_year IS E'e.g. 1999, CORRECT ORDER';
COMMENT ON COLUMN times.time_id IS E'primary key; day date, finest granularity, CORRECT ORDER';
COMMENT ON COLUMN times.week_ending_day IS E'date of last day in week, CORRECT ORDER';
ALTER TABLE times ADD PRIMARY KEY (time_id);
ALTER TABLE times ALTER COLUMN time_id SET NOT NULL;
ALTER TABLE times ALTER COLUMN day_name SET NOT NULL;
ALTER TABLE times ALTER COLUMN day_number_in_week SET NOT NULL;
ALTER TABLE times ALTER COLUMN day_number_in_month SET NOT NULL;
ALTER TABLE times ALTER COLUMN calendar_week_number SET NOT NULL;
ALTER TABLE times ALTER COLUMN fiscal_week_number SET NOT NULL;
ALTER TABLE times ALTER COLUMN week_ending_day SET NOT NULL;
ALTER TABLE times ALTER COLUMN week_ending_day_id SET NOT NULL;
ALTER TABLE times ALTER COLUMN calendar_month_number SET NOT NULL;
ALTER TABLE times ALTER COLUMN fiscal_month_number SET NOT NULL;
ALTER TABLE times ALTER COLUMN calendar_month_desc SET NOT NULL;
ALTER TABLE times ALTER COLUMN calendar_month_id SET NOT NULL;
ALTER TABLE times ALTER COLUMN fiscal_month_desc SET NOT NULL;
ALTER TABLE times ALTER COLUMN fiscal_month_id SET NOT NULL;
ALTER TABLE times ALTER COLUMN days_in_cal_month SET NOT NULL;
ALTER TABLE times ALTER COLUMN days_in_fis_month SET NOT NULL;
ALTER TABLE times ALTER COLUMN end_of_cal_month SET NOT NULL;
ALTER TABLE times ALTER COLUMN end_of_fis_month SET NOT NULL;
ALTER TABLE times ALTER COLUMN calendar_month_name SET NOT NULL;
ALTER TABLE times ALTER COLUMN fiscal_month_name SET NOT NULL;
ALTER TABLE times ALTER COLUMN calendar_quarter_desc SET NOT NULL;
ALTER TABLE times ALTER COLUMN calendar_quarter_id SET NOT NULL;
ALTER TABLE times ALTER COLUMN fiscal_quarter_desc SET NOT NULL;
ALTER TABLE times ALTER COLUMN fiscal_quarter_id SET NOT NULL;
ALTER TABLE times ALTER COLUMN days_in_cal_quarter SET NOT NULL;
ALTER TABLE times ALTER COLUMN days_in_fis_quarter SET NOT NULL;
ALTER TABLE times ALTER COLUMN end_of_cal_quarter SET NOT NULL;
ALTER TABLE times ALTER COLUMN end_of_fis_quarter SET NOT NULL;
ALTER TABLE times ALTER COLUMN calendar_quarter_number SET NOT NULL;
ALTER TABLE times ALTER COLUMN fiscal_quarter_number SET NOT NULL;
ALTER TABLE times ALTER COLUMN calendar_year SET NOT NULL;
ALTER TABLE times ALTER COLUMN calendar_year_id SET NOT NULL;
ALTER TABLE times ALTER COLUMN fiscal_year SET NOT NULL;
ALTER TABLE times ALTER COLUMN fiscal_year_id SET NOT NULL;
ALTER TABLE times ALTER COLUMN days_in_cal_year SET NOT NULL;
ALTER TABLE times ALTER COLUMN days_in_fis_year SET NOT NULL;
ALTER TABLE times ALTER COLUMN end_of_cal_year SET NOT NULL;
ALTER TABLE times ALTER COLUMN end_of_fis_year SET NOT NULL;
ALTER TABLE costs ADD CONSTRAINT costs_channel_fk FOREIGN KEY (channel_id) REFERENCES channels(channel_id) ON DELETE NO ACTION NOT DEFERRABLE INITIALLY IMMEDIATE;

ALTER TABLE costs ADD CONSTRAINT costs_product_fk FOREIGN KEY (prod_id) REFERENCES products(prod_id) ON DELETE NO ACTION NOT DEFERRABLE INITIALLY IMMEDIATE;

ALTER TABLE costs ADD CONSTRAINT costs_promo_fk FOREIGN KEY (promo_id) REFERENCES promotions(promo_id) ON DELETE NO ACTION NOT DEFERRABLE INITIALLY IMMEDIATE;

ALTER TABLE costs ADD CONSTRAINT costs_time_fk FOREIGN KEY (time_id) REFERENCES times(time_id) ON DELETE NO ACTION NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE customers ADD CONSTRAINT customers_country_fk FOREIGN KEY (country_id) REFERENCES countries(country_id) ON DELETE NO ACTION NOT DEFERRABLE INITIALLY IMMEDIATE NOT VALID;
ALTER TABLE sales ADD CONSTRAINT sales_channel_fk FOREIGN KEY (channel_id) REFERENCES channels(channel_id) ON DELETE NO ACTION NOT DEFERRABLE INITIALLY IMMEDIATE;

ALTER TABLE sales ADD CONSTRAINT sales_customer_fk FOREIGN KEY (cust_id) REFERENCES customers(cust_id) ON DELETE NO ACTION NOT DEFERRABLE INITIALLY IMMEDIATE;

ALTER TABLE sales ADD CONSTRAINT sales_product_fk FOREIGN KEY (prod_id) REFERENCES products(prod_id) ON DELETE NO ACTION NOT DEFERRABLE INITIALLY IMMEDIATE;

ALTER TABLE sales ADD CONSTRAINT sales_promo_fk FOREIGN KEY (promo_id) REFERENCES promotions(promo_id) ON DELETE NO ACTION NOT DEFERRABLE INITIALLY IMMEDIATE;

ALTER TABLE sales ADD CONSTRAINT sales_time_fk FOREIGN KEY (time_id) REFERENCES times(time_id) ON DELETE NO ACTION NOT DEFERRABLE INITIALLY IMMEDIATE;
